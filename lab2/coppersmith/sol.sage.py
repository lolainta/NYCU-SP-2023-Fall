

# This file was *autogenerated* from the file sol.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_8 = Integer(8); _sage_const_30 = Integer(30); _sage_const_0 = Integer(0)
from sage.all import *
from data import e, n, ct, padding
from Crypto.Util.number import long_to_bytes, bytes_to_long

def main():
    R = _sage_const_1 <<(_sage_const_8 *_sage_const_30 )
    F = PolynomialRing(Zmod(n), names=('x',)); (x,) = F._first_ngens(1)
    f = (x + bytes_to_long(padding)*R) ** e - ct
    root = int(f.small_roots(X=R)[_sage_const_0 ])
    print(long_to_bytes(root))

if __name__ == "__main__":
    main()


