from Crypto.Util.number import bytes_to_long
from secret import p, q, flag

## Alice: This is my public key.
# p = getPrime(512)
# q = getPrime(512)
N = p * q
e = 65537
print(f"{N = }")
print(f"{e = }")
# N = 69214008498642035761243756357619851816607540327248468473247478342523127723748756926949706235406640562827724567100157104972969498385528097714986614165867074449238186426536742677816881849038677123630836686152379963670139334109846133566156815333584764063197379180877984670843831985941733688575703811651087495223
# e = 65537

## Bob: My flawless encryption method was broken!?
## Bob: Maybe, I should not send such a long message ....
assert len(flag) * 8 < 1024
encrypted_flag = pow(bytes_to_long(flag), e, N)
print(f"{encrypted_flag = }")

## Bob: Ha ha! Now no one can decrypt my message except Alice!
# encrypted_flag = 67448907891721241368838325896320122397092733550961191069708016032244349188684070793897519352151466622385197077064799553157879456334546372809948272281247935498288157941438709402245513879910090372080411345199729220479271018326225319584057160895804120944126979515126944833368164622466123481816185794224793277249
